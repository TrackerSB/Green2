<?xml version="1.0" encoding="UTF-8"?>
<!--
  ~ Copyright (c) 2017. Stefan Huber
  ~ Permission is hereby granted, free of charge, to any person obtaining a copy of this software and associated documentation files (the "Software"), to deal in the Software without restriction, including without limitation the rights to use, copy, modify, merge, publish, distribute, sublicense, and/or sell copies of the Software, and to permit persons to whom the Software is furnished to do so, subject to the following conditions:
  ~
  ~ The above copyright notice and this permission notice shall be included in all copies or substantial portions of the Software.
  ~
  ~ THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY, FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS IN THE SOFTWARE.
  -->

<project name="dataprovider" default="all">
  
  
  <property file="dataprovider.properties"/>
  <!-- Uncomment the following property if no tests compilation is needed -->
  <!-- 
  <property name="skip.tests" value="true"/>
   -->
  
  <!-- Compiler options -->
  
  <property name="compiler.debug" value="on"/>
  <property name="compiler.generate.no.warnings" value="off"/>
  <property name="compiler.args" value=""/>
  <property name="compiler.max.memory" value="700m"/>
  <patternset id="ignored.files">
    <exclude name="**/*.hprof/**"/>
    <exclude name="**/*.pyc/**"/>
    <exclude name="**/*.pyo/**"/>
    <exclude name="**/*.rbc/**"/>
    <exclude name="**/*.yarb/**"/>
    <exclude name="**/*~/**"/>
    <exclude name="**/.DS_Store/**"/>
    <exclude name="**/.git/**"/>
    <exclude name="**/.hg/**"/>
    <exclude name="**/.svn/**"/>
    <exclude name="**/CVS/**"/>
    <exclude name="**/__pycache__/**"/>
    <exclude name="**/_svn/**"/>
    <exclude name="**/vssver.scc/**"/>
    <exclude name="**/vssver2.scc/**"/>
  </patternset>
  <patternset id="library.patterns">
    <include name="*.war"/>
    <include name="*.swc"/>
    <include name="*.zip"/>
    <include name="*.egg"/>
    <include name="*.ane"/>
    <include name="*.jar"/>
    <include name="*.ear"/>
  </patternset>
  <patternset id="compiler.resources">
    <exclude name="**/?*.java"/>
    <exclude name="**/?*.form"/>
    <exclude name="**/?*.class"/>
    <exclude name="**/?*.groovy"/>
    <exclude name="**/?*.scala"/>
    <exclude name="**/?*.flex"/>
    <exclude name="**/?*.kt"/>
    <exclude name="**/?*.clj"/>
  </patternset>
  
  <!-- JDK definitions -->
  
  <property name="jdk.bin.1.8" value="${jdk.home.1.8}/bin"/>
  <path id="jdk.classpath.1.8">
    <fileset dir="${jdk.home.1.8}">
      <include name="jre/lib/charsets.jar"/>
      <include name="jre/lib/deploy.jar"/>
      <include name="jre/lib/ext/access-bridge-64.jar"/>
      <include name="jre/lib/ext/cldrdata.jar"/>
      <include name="jre/lib/ext/dnsns.jar"/>
      <include name="jre/lib/ext/jaccess.jar"/>
      <include name="jre/lib/ext/jfxrt.jar"/>
      <include name="jre/lib/ext/localedata.jar"/>
      <include name="jre/lib/ext/nashorn.jar"/>
      <include name="jre/lib/ext/sunec.jar"/>
      <include name="jre/lib/ext/sunjce_provider.jar"/>
      <include name="jre/lib/ext/sunmscapi.jar"/>
      <include name="jre/lib/ext/sunpkcs11.jar"/>
      <include name="jre/lib/ext/zipfs.jar"/>
      <include name="jre/lib/javaws.jar"/>
      <include name="jre/lib/jce.jar"/>
      <include name="jre/lib/jfr.jar"/>
      <include name="jre/lib/jfxswt.jar"/>
      <include name="jre/lib/jsse.jar"/>
      <include name="jre/lib/management-agent.jar"/>
      <include name="jre/lib/plugin.jar"/>
      <include name="jre/lib/resources.jar"/>
      <include name="jre/lib/rt.jar"/>
    </fileset>
  </path>
  
  <property name="project.jdk.home" value="${jdk.home.1.8}"/>
  <property name="project.jdk.bin" value="${jdk.bin.1.8}"/>
  <property name="project.jdk.classpath" value="jdk.classpath.1.8"/>
  
  
  <!-- Global Libraries -->
  
  <path id="library.wizard.classpath">
    <pathelement location="C:/Users/Stefan Huber/myPrograms/java/MyLibraries/out/artifacts/Wizard_jar/Wizard.jar"/>
  </path>
  <!-- Register Custom Compiler Taskdefs -->
  <property name="javac2.home" value="${idea.home}/lib"/>
  <path id="javac2.classpath">
    <pathelement location="${javac2.home}/javac2.jar"/>
    <pathelement location="${javac2.home}/jdom.jar"/>
    <pathelement location="${javac2.home}/asm-all.jar"/>
    <pathelement location="${javac2.home}/jgoodies-forms.jar"/>
  </path>
  <target name="register.custom.compilers">
    <taskdef name="javac2" classname="com.intellij.ant.Javac2" classpathref="javac2.classpath"/>
    <taskdef name="instrumentIdeaExtensions" classname="com.intellij.ant.InstrumentIdeaExtensions" classpathref="javac2.classpath"/>
  </target>
  
  <!-- Modules -->
  
  <import file="${basedir}/module_dataprovider.xml"/>
  
  <target name="init" description="Build initialization">
    <!-- Perform any build initialization in this target -->
  </target>
  
  <target name="clean" depends="clean.module.dataprovider, clean.artifact.dataprovider" description="cleanup all"/>
  
  <target name="build.modules" depends="init, clean, compile.module.dataprovider" description="build all modules"/>
  
  <target name="init.artifacts">
    <property name="artifacts.temp.dir" value="${basedir}/__artifacts_temp"/>
    <property name="artifact.output.dataprovider" value="${basedir}/out/artifacts/DataProvider"/>
    <mkdir dir="${artifacts.temp.dir}"/>
    <property name="artifact.temp.output.DataProvider" value="${artifacts.temp.dir}/DataProvider.jar"/>
    <taskdef resource="com/sun/javafx/tools/ant/antlib.xml" uri="javafx:com.sun.javafx.tools.ant" classpath="${jdk.home.1.8}/lib/ant-javafx.jar"/>
  </target>
  
  <target name="clean.artifact.dataprovider" description="clean DataProvider artifact output">
    <delete dir="${artifact.output.dataprovider}"/>
  </target>
  
  <target name="artifact.dataprovider" depends="init.artifacts, compile.module.dataprovider" description="Build &#39;DataProvider&#39; artifact" xmlns:fx="javafx:com.sun.javafx.tools.ant">
    <mkdir dir="${artifact.output.dataprovider}"/>
    <copy todir="${artifact.temp.output.DataProvider}">
      <fileset dir="${dataprovider.output.dir}"/>
    </copy>
    <mkdir dir="${artifact.temp.output.DataProvider}/META-INF"/>
    <copy file="${basedir}/META-INF/MANIFEST.MF" tofile="${artifact.temp.output.DataProvider}/META-INF/MANIFEST.MF"/>
    <fx:fileset id="all_but_DataProvider" dir="${artifact.temp.output.DataProvider}" includes="**/*.jar">
      <exclude name="DataProvider.jar"/>
    </fx:fileset>
    <fx:fileset id="all_DataProvider" dir="${artifact.temp.output.DataProvider}" includes="**/*.jar"/>
    <fx:application id="DataProvider_id" name="DataProvider" mainClass="sample.Main"/>
    <fx:jar destfile="${artifact.temp.output.DataProvider}/DataProvider.jar">
      <fx:application refid="DataProvider_id"/>
      <fileset dir="${artifact.temp.output.DataProvider}" excludes="**/*.jar"/>
      <fx:resources>
        <fx:fileset refid="all_but_DataProvider"/>
      </fx:resources>
    </fx:jar>
    <fx:deploy width="600" height="400" updatemode="background" outdir="${artifact.temp.output.DataProvider}/deploy" outfile="DataProvider">
      <fx:application refid="DataProvider_id"/>
      <fx:resources>
        <fx:fileset refid="all_DataProvider"/>
      </fx:resources>
    </fx:deploy>
    <copy todir="${artifact.output.dataprovider}">
      <fileset dir="${artifact.temp.output.DataProvider}/deploy"/>
    </copy>
    <delete includeemptydirs="true">
      <fileset dir="${artifact.temp.output.DataProvider}"/>
    </delete>
  </target>
  
  <target name="build.all.artifacts" depends="artifact.dataprovider" description="Build all artifacts">
    
    <!-- Delete temporary files -->
    <delete dir="${artifacts.temp.dir}"/>
  </target>
  
  <target name="all" depends="build.modules, build.all.artifacts" description="build all"/>
</project>